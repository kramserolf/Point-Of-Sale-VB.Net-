<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>