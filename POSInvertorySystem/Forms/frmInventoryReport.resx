<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>